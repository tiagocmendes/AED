The traveling salesman problem

- Modificar o código da função tsp_v1(), presente no ficheiro tsp.c para que, em vez de imprimir cada permutação, a versão modificada resolva o problema do caixeiro viajante.

- Fazer algum trabalho de pesquisa sobre o problema.


- TAREFAS

* OBRIGATÓRIA - No início da função main no ficheiro tsp.c, colocar o número mecanográfico na linha "n_mec = 0;"
* OBRIGATÓRIA - Calcular o comprimento do melhor caminho para 3,4,...,15 cidades.
* Calcular o comprimento do pior caminho para 3,4,...,15 cidades.
* Medir o tempo que demora a resolver o problema para as primeiras k cidades, para 2 <= k <= 15
* Fazer um histograma do comprimento de todos os trajetos desde 12 a 15 cidades (DÚVIDA)
* Cálculo do melhor e pior caminhos encontrados usando, dizendo, 1 milhão de permutações aleatórias da ordem pela qual as cidades são
  visitadas; no relatório, tentar comparar os resultados deste algoritmo probabilístico com o que o histograma do comprimento dos trajetos
  sugeridos deve acontecer
* Para o relatório final, fazer gráficos separados dos melhores e piores trajetos, apenas para ver como é que eles são (existe código para
  criar ficheiros .SVG)
* No início da função main() do ficheiro tsp.c, alterar a linha special = 0; para special = 1; e voltar a fazer todas os cálculos. Para este
  caso, a distância inter-cidades é assimétrico.


- PESQUISA

https://www.youtube.com/watch?v=BAejnwN4Ccw
https://www.youtube.com/watch?v=SC5CX8drAtU
https://en.wikipedia.org/wiki/Travelling_salesman_problem
